NewBreeze v3.0.0
================

This is a completely native style GUI application. NewBreeze Native UI has been deprecated and removed. The main application itself is now natively styled. These are the
few changes in NewBreeze 3.

=> Qt5 Support
   - This release onwards Qt5 builds are supported. Use qmake-qt5 to build using Qt5.

=> User interface rebuiltm integrating code from NewBreeze and NewBreezeUI
   - File/Folder filtering

=> NBFileSystemWatcher
    NBFileSystemWatcher has been rewritten with a cleaner code based on the inotify-example.c from http://www.lanedo.com/users/amorgado/fanotify/inotify-example.c

=> NBItemViewModel( QAbsractItemModel )
   - Formerly NBFileSystemModel, now it models Applications, Catalogs, and the FileSystem
   - Buffed up for better performance.
   - NBFileSystemModel provides upto 50% faster thumbnails for images.

=> NBIconView( QAbstractItemModel )
   - Per-folder views are now enabled. Each folder remembers its previous state ( size, grouping, list view, etc )
   - Fixed the small issue of mouse/cursor selection conflict.
   - Partially fixed the SegFault with cursor up and down movements.

=> NBAddressBar redesigned
   - NBBreadCrumbsBar is now called NBCrumbsBar.
   - It redesigned to make sure long paths do not run out of the widget.
   - The full path can be displayed using FlowLayout at anytime.

=> NBSidePanel
   - A redesigned sidepanel with elegant menu listing the devices and bookmarks.
   - Devices show the space usage.

=> NBButton
   - NBButton has been rewritten to be a subclass of QPushButton, with better styling.
   - Issues with NBSegmentControl has caused me to go back to NBButtons, which "look" better.

=> NBPreviewInterface
   - All plugins are updated to use the standard NBPreviewInteface.
   - NBInterface can be used easily to extend Preview support for NewBreeze.
   - Defaults Plugins will now be shipped with NewBreeze rather than as a separate repo.

=> NBArchive extended
   - NBArchive is now rebuilt using libarchive for archive processing
   - GZip, BZip2, and XZ files are processed independently
   - Archive creation now shows a pretty dialog with some options
   - Archive creationand extraction is done via QtConcurrent::run( ... )
