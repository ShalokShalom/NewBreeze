NewBreeze v2.2.0-preview
========================

This is a preview release of v2.2.0

=> NBAFileSystemModel( QAbstractItemModel )
   NBFileSystemModel is now a categorized item model. Categories can be name, size, type or modification time based. Categorization can
   easily be switched on or off via setCategorizationEnabled( bool );

=> NBIconView( QAbstractItemView )
   NBIconView is now categorized item view. It supports both a categorized and a non categorized item model.

=> 'Show in groups'
   This switch helps to switch on or of the Categorization of the Model and the View.

=> QActionGroup
   The older approach of using radiobuttons and making them exclusive to provide 'View Modes' list and 'Sort By' menu has been replaced by the
   cleaner QActionGroup approach. This is much more elegant and clean.

NewBreeze v2.2.0
================

=> NBAFileSystemModel( QAbstractItemModel )
   - NBFileSystemModel is now a categorized item model. Categories can be name, size, type or modification time based. Categorization can
     easily be switched on or off via setCategorizationEnabled( bool )
   - NBFileSystem now detects file size changes and automatically updates it.

=> NBIconView( QAbstractItemView )
   NBIconView is now categorized item view. It supports both a categorized and a non categorized item model.

=> 'Show in groups'
   This switch helps to switch on or of the Categorization of the Model and the View.

=> QActionGroup
   The older approach of using radiobuttons and making them exclusive to provide 'View Modes' list and 'Sort By' menu has been replaced by the
   cleaner QActionGroup approach. This is much more elegant and clean.

=> Move
   The intra-device move is now purely a renaming action.
   In case a directory which is being moved exists then a full-gledged FileIO will be performed.

=> FileIO
   While copying/moving a file, if by chance, the target exists, then the newly copied file will be renamed as *basename* - Copy.*ext*
   While copying/moving a folder, if by chance, the target exist, then folder being copied get merged with the existing folder, and existing
   files renamed.

=> View Modes
   I have done away with the predefined view modes with fixed sizes. Now we have three view modes, the tiles view, the icons view and the
   details view. Icon size can be dynamically changed by pressing the 'Zoom In' and 'Zoom Out' key sequences. This changes the icon size by
   4px
   -> Icons And Tiles view: 16px <-->128px
   -> Tree view: 16px <--> 64px

=> Details
   Depending on the Icon Size, extra details will be shown for all the items in the tiles and the icons views. For now the order of details
   which are unveiled are hard coded into the program. This *may* be changed at a later date.

=> Delete GUI
   Since the delete process is very fast a gui is not required.
